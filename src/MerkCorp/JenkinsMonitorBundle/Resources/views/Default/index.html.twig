{% extends '::base.html.twig' %}

{% block body %}

    <div class="container">
        <div class="row">
            <div class="col-xs-12">

                <h1>Site Builds Status</h1>
                <div class="curl-alert alert alert-danger alert-dismissible" role="alert">
                    <span class="error-text"></span>
                </div>
                <hr/>

                <div>
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs" role="tablist">
                        {% for job_type_key, job_type in jenkins_jobs %}
                            <li role="presentation" {% if loop.first %} class="active"{% endif %}><a
                                        href="#{{ job_type_key }}"
                                        aria-controls="{{ job_type_key }}" role="tab"
                                        data-toggle="tab">{{ job_type_key|unCamelCase|capitalize }}</a>
                            </li>
                        {% endfor %}
                    </ul>

                    <!-- Tab panes -->
                    <div class="tab-content">
                        {% for job_type_key, job_type in jenkins_jobs %}
                            <div role="tabpanel" class="tab-pane {% if loop.first %}active{% endif %}"
                                 id="{{ job_type_key }}">
                                <table class="table table-bordered table-responsive">
                                    <thead>
                                    <tr>
                                        <td></td>
                                        <td>Site Name</td>
                                        <td>Status</td>
                                        <td>Actions</td>
                                    </tr>
                                    </thead>
                                    <tbody>
                                    {% for job in job_type if job.color != 'notbuilt' %}
                                        {% set statusClass = 'success' %}

                                        {% if job.color == 'yellow' %}
                                            {% set statusClass = 'warning' %}
                                        {% elseif job.color == 'red' %}
                                            {% set statusClass = 'danger' %}
                                        {% endif %}
                                        <tr data-toggle="collapse" id="{{ job_type_key ~ '_' ~ job.name }}"
                                            data-project="{{ job.name }}"
                                            data-target="#{{ job_type_key ~ '_' ~ job.name|replace({'.': '-'}) }}"
                                            class="project-row">
                                            <td style="width: 5%">
                                                <i class="glyphicon glyphicon-triangle-bottom"></i>
                                            <td>{{ job.name }}</td>
                                            <td class="{{ statusClass }}">
                                                {% if job.color == 'blue' %}
                                                    SUCCESS
                                                {% elseif job.color == 'yellow' %}
                                                    WARNING
                                                {% else %}
                                                    FAILED
                                                {% endif %}
                                            </td>
                                            <td>
                                                <div class="btn-group">
                                                    <button data-project="{{ job.name }}"
                                                            class="btn btn-xs btn-success build-now">Build now
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr class="collapse"
                                            id="{{ job_type_key ~ '_' ~job.name|replace({'.': '-'}) }}">
                                            <td colspan="4">
                                            </td>
                                        </tr>
                                    {% endfor %}
                                    </tbody>
                                </table>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" id="buildModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="row text-center">
                        <div class="col-lg-12">
                            <div class="modal-body">
                                <h2>The build has been started</h2>
                                <p>Your build is in process, please wait a few moments to check the result</p>
                                <p>You can update the build information clicking the button.</p>
                                <button class="btn btn-lg btn-success get-build-status" data-project="">Get build
                                    status
                                </button>
                            </div>
                        </div>
                        <div class="col-lg-12 alert-container hide">
                            <div class="alert" style="border-radius: 0"></div>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block extrajavascritps %}
    <script type="text/javascript">
        /**
         * Created by merkury on 16/07/2017.
         */
        $(document).ready(function () {

            var rows = $('.project-row');
            var buildNowButtons = $('.build-now');
            var projectStatusButton = $('.get-build-status');
            var buildModal = $('#buildModal');
            var alertContainer = $('.alert-container');
            var curl_alert = $('.curl-alert');
            curl_alert.hide();

            rows.click(function () {

                var projectName = $(this).data('project');
                var panelId = '#' + $(this).attr('id').replace(/\./g, '-');
                var clickedPanel = $(panelId);
                var clickedPanelTd = $(panelId + ' td');
                var icon = $(this).find("i");
                icon.removeClass('glyphicon-triangle-bottom').addClass('glyphicon-triangle-top');

                var url = "{{ path('wk_ajax_project_status', {'projectName': 'foo'}) }}";
                url = url.replace('foo', projectName);

                clickedPanel.on("hidden.bs.collapse", function (e) {
                    icon.removeClass('glyphicon-triangle-top').addClass('glyphicon-triangle-bottom');
                    clickedPanelTd.empty();
                });


                if (!clickedPanel.hasClass('in')) {
                    curl_alert.hide();
                    $.ajax({
                        type: "GET",
                        url: url,
                        contentType: "application/json; charset=utf-8",
                        success: function (response) {
                            var changeSetHTML = '';
                            if (response.changeSet.items.length > 0) {

                                var changeSet = response.changeSet.items[0];
                                var affectedPaths = composeChangeSet(changeSet.affectedPaths);
                                changeSetHTML = "<table class='table table-bordered'><tbody>" +
                                    "<tr><td><b>Author</b></td>" +
                                    "<td>" + changeSet.author.fullName + "</td></tr>" +
                                    "<tr><td><b>Date</b></td><td>" + formatDate(response.timestamp) + "</td></tr>" +
                                    "<tr><td><b>Commit Id</b></td><td>" + changeSet.commitId + "</td></tr>" +
                                    "<tr><td><b>Comment</b></td><td>" + changeSet.comment + "</td></tr>" +
                                    "<tr><td><b>Affected Files</b></td><td>" + affectedPaths + "</td></tbody></table>";
                            } else {
                                changeSetHTML = "<table class='table table-bordered'><tbody><tr><td><h4>No changes in the last build</td></tr></tbody>";
                            }

                            clickedPanelTd.html(changeSetHTML);

                        },
                        error: function (error) {
                            var errorText = curl_alert.find('.error-text');
                            errorText.html(error.responseText);
                            curl_alert.show();
                        }
                    });
                }

            });

            buildNowButtons.click(function (e) {
                curl_alert.hide();
                e.stopPropagation();
                var projectName = $(this).data('project');
                var url = "{{ path('wk_ajax_build_project', {'projectName': 'foo'}) }}";
                url = url.replace('foo', projectName);

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    success: function () {
                        $('.get-build-status').data('project', projectName);
                        buildModal.modal();
                    },
                    error: function (error) {
                        var errorText = curl_alert.find('.error-text');
                        errorText.html(error.responseText);
                        curl_alert.show();
                    }
                });
            });

            projectStatusButton.click(function (e) {
                curl_alert.hide();
                var projectName = $(this).data('project');
                var url = "{{ path('wk_ajax_project_status', {'projectName': 'foo', 'statusOnly': '1'}) }}";
                url = url.replace('foo', projectName);

                $.ajax({
                    type: "GET",
                    url: url,
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        var alert = buildModal.find('.alert');
                        switch (response.result) {
                            case 'SUCCESS':
                                alert.addClass('alert-success');
                                break;
                            case 'UNSTABLE':
                                alert.addClass('alert-warning');
                                break;
                            case 'FAILURE':
                                alert.addClass('alert-danger');
                                break;
                        }
                        alert.html(projectName + ' build status: ' + response.result)
                        alertContainer.removeClass('hide');
                    },
                    error: function (error) {
                        var errorText = curl_alert.find('.error-text');
                        errorText.html(error.responseText);
                        curl_alert.show();
                    }
                });
            });

            buildModal.on('hidden.bs.modal', function () {
                $('.get-build-status').removeData('project');
                alertContainer.addClass('hide');
                $(this).find('.alert').removeClass('alert-success').removeClass('alert-warning').removeClass('alert-danger');
                $(this).find('.alert').html('');
            });

        });

        // Function to create the html table contained in the cell assigned for affected files
        function composeChangeSet(changedFiles) {

            var containerDiv = $('<div>');
            var scrollableContainer = $('<div>');
            scrollableContainer.addClass('pre-scrollable').css('height: 250px');

            var changeSetTableHtml = $('<table>');
            var changeSetTBodyHtml = $('<tbody>');
            changeSetTableHtml.addClass('table').addClass('table-bordered');

            $.each(changedFiles, function (i, file) {
                var newRow = $('<tr>');
                $('<td>').html(file).appendTo(newRow);
                newRow.appendTo(changeSetTBodyHtml);
                changeSetTBodyHtml.appendTo(changeSetTableHtml);
            });

            changeSetTableHtml.appendTo(scrollableContainer);
            scrollableContainer.appendTo(containerDiv);
            return containerDiv.html();

        }

        // Function to convert unix timestamp into human readable format.
        function formatDate(timestamp) {
            var d = new Date(timestamp),
                dformat = [(d.getMonth() + 1).padLeft(),
                        d.getDate().padLeft(),
                        d.getFullYear()].join('/') + ' ' +
                    [d.getHours().padLeft(),
                        d.getMinutes().padLeft(),
                        d.getSeconds().padLeft()].join(':');

            return dformat;
        }

        // We use number extension to add leading zeros where needed
        Number.prototype.padLeft = function (base, chr) {
            var len = (String(base || 10).length - String(this).length) + 1;
            return len > 0 ? new Array(len).join(chr || '0') + this : this;
        }
    </script>
{% endblock %}
